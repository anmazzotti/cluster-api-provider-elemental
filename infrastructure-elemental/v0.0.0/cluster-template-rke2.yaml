apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: RKE2ConfigTemplate
metadata:
  namespace: ${NAMESPACE}
  name: ${CLUSTER_NAME}-md-0
spec: 
  template:
    spec: {}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  labels:
    cni: ${CLUSTER_NAME}-crs-0
    crs: "true"
  name: ${CLUSTER_NAME}
  namespace: ${NAMESPACE}
spec:
  clusterNetwork:
    services:
      cidrBlocks: ${SERVICE_CIDR:=["10.96.0.0/12"]}
    pods:
      cidrBlocks: ${POD_CIDR:=["10.244.0.0/16"]}
    serviceDomain: ${SERVICE_DOMAIN:="cluster.local"}
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: RKE2ControlPlane
    name: ${CLUSTER_NAME}-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: ElementalCluster
    name: ${CLUSTER_NAME}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: ${CLUSTER_NAME}-md-0
  namespace: ${NAMESPACE}
spec:
  clusterName: ${CLUSTER_NAME}
  replicas: ${WORKER_MACHINE_COUNT}
  selector:
    matchLabels: null
  template:
    metadata:
      labels:
        nodepool: pool1
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: RKE2ConfigTemplate
          name: ${CLUSTER_NAME}-md-0
      clusterName: ${CLUSTER_NAME}
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: ElementalMachineTemplate
        name: ${CLUSTER_NAME}-md-0
      version: "v${KUBERNETES_VERSION:=1.30.1}+rke2r1"
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: RKE2ControlPlane
metadata:
  name: ${CLUSTER_NAME}-control-plane
  namespace: ${NAMESPACE}
spec: 
  replicas: 1
  version: "v${KUBERNETES_VERSION:=1.30.1}+rke2r1"
  serverConfig:
    disableComponents:
      kubernetesComponents:
        - cloudController
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: ElementalMachineTemplate
    name: ${CLUSTER_NAME}-control-plane
  nodeDrainTimeout: 2m
  registrationMethod: "address"
  registrationAddress: "${CONTROL_PLANE_ENDPOINT_HOST}"
  rolloutStrategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: 1
  files:
  - path: /var/lib/rancher/rke2/server/manifests/kube-vip.yaml
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        creationTimestamp: null
        name: kube-vip
        namespace: kube-system
      spec:
        containers:
        - args:
          - manager
          env:
          - name: vip_arp
            value: "true"
          - name: port
            value: "${CONTROL_PLANE_ENDPOINT_PORT:=6443}"
          - name: vip_nodename
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: vip_interface
            value: ${VIP_INTERFACE:=eth0}
          - name: vip_cidr
            value: "32"
          - name: dns_mode
            value: first
          - name: cp_enable
            value: "true"
          - name: cp_namespace
            value: kube-system
          - name: svc_enable
            value: "true"
          - name: svc_leasename
            value: plndr-svcs-lock
          - name: vip_leaderelection
            value: "true"
          - name: vip_leasename
            value: plndr-cp-lock
          - name: vip_leaseduration
            value: "5"
          - name: vip_renewdeadline
            value: "3"
          - name: vip_retryperiod
            value: "1"
          - name: address
            value: ${CONTROL_PLANE_ENDPOINT_HOST}
          - name: prometheus_server
            value: :2112
          image: ghcr.io/kube-vip/kube-vip:v0.8.0
          imagePullPolicy: IfNotPresent
          name: kube-vip
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          volumeMounts:
          - mountPath: /etc/kubernetes/admin.conf
            name: kubeconfig
        hostAliases:
        - hostnames:
          - kubernetes
          ip: 127.0.0.1
        hostNetwork: true
        volumes:
        - hostPath:
            path: /etc/rancher/rke2/rke2.yaml
          name: kubeconfig
      status: {}
    owner: root:root
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: ElementalCluster
metadata:
  name: ${CLUSTER_NAME}
  namespace: ${NAMESPACE}
spec:
  controlPlaneEndpoint:
    host: ${CONTROL_PLANE_ENDPOINT_HOST}
    port: ${CONTROL_PLANE_ENDPOINT_PORT:=6443}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: ElementalMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-control-plane
  namespace: ${NAMESPACE}
spec:
  template:
    spec: {}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: ElementalMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
  namespace: ${NAMESPACE}
spec:
  template:
    spec: {}
