// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.3
// source: pkg/api/proto/v1/elemental.proto

package elemental

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InPlaceUpdate int32

const (
	InPlaceUpdate_IN_PLACE_UPDATE_UNSPECIFIED InPlaceUpdate = 0
	InPlaceUpdate_IN_PLACE_UPDATE_DONE        InPlaceUpdate = 1
	InPlaceUpdate_IN_PLACE_UPDATE_PENDING     InPlaceUpdate = 2
)

// Enum value maps for InPlaceUpdate.
var (
	InPlaceUpdate_name = map[int32]string{
		0: "IN_PLACE_UPDATE_UNSPECIFIED",
		1: "IN_PLACE_UPDATE_DONE",
		2: "IN_PLACE_UPDATE_PENDING",
	}
	InPlaceUpdate_value = map[string]int32{
		"IN_PLACE_UPDATE_UNSPECIFIED": 0,
		"IN_PLACE_UPDATE_DONE":        1,
		"IN_PLACE_UPDATE_PENDING":     2,
	}
)

func (x InPlaceUpdate) Enum() *InPlaceUpdate {
	p := new(InPlaceUpdate)
	*p = x
	return p
}

func (x InPlaceUpdate) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InPlaceUpdate) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_api_proto_v1_elemental_proto_enumTypes[0].Descriptor()
}

func (InPlaceUpdate) Type() protoreflect.EnumType {
	return &file_pkg_api_proto_v1_elemental_proto_enumTypes[0]
}

func (x InPlaceUpdate) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InPlaceUpdate.Descriptor instead.
func (InPlaceUpdate) EnumDescriptor() ([]byte, []int) {
	return file_pkg_api_proto_v1_elemental_proto_rawDescGZIP(), []int{0}
}

type HostPhase int32

const (
	HostPhase_HOST_PHASE_UNSPECIFIED             HostPhase = 0
	HostPhase_HOST_PHASE_REGISTERING             HostPhase = 1
	HostPhase_HOST_PHASE_FINALIZING_REGISTRATION HostPhase = 2
	HostPhase_HOST_PHASE_INSTALLING              HostPhase = 3
	HostPhase_HOST_PHASE_BOOTSTRAPPING           HostPhase = 4
	HostPhase_HOST_PHASE_RUNNING                 HostPhase = 5
	HostPhase_HOST_PHASE_TRIGGERING_RESET        HostPhase = 6
	HostPhase_HOST_PHASE_RESETTING               HostPhase = 7
	HostPhase_HOST_PHASE_RECONCILING_OS_VERSION  HostPhase = 8
)

// Enum value maps for HostPhase.
var (
	HostPhase_name = map[int32]string{
		0: "HOST_PHASE_UNSPECIFIED",
		1: "HOST_PHASE_REGISTERING",
		2: "HOST_PHASE_FINALIZING_REGISTRATION",
		3: "HOST_PHASE_INSTALLING",
		4: "HOST_PHASE_BOOTSTRAPPING",
		5: "HOST_PHASE_RUNNING",
		6: "HOST_PHASE_TRIGGERING_RESET",
		7: "HOST_PHASE_RESETTING",
		8: "HOST_PHASE_RECONCILING_OS_VERSION",
	}
	HostPhase_value = map[string]int32{
		"HOST_PHASE_UNSPECIFIED":             0,
		"HOST_PHASE_REGISTERING":             1,
		"HOST_PHASE_FINALIZING_REGISTRATION": 2,
		"HOST_PHASE_INSTALLING":              3,
		"HOST_PHASE_BOOTSTRAPPING":           4,
		"HOST_PHASE_RUNNING":                 5,
		"HOST_PHASE_TRIGGERING_RESET":        6,
		"HOST_PHASE_RESETTING":               7,
		"HOST_PHASE_RECONCILING_OS_VERSION":  8,
	}
)

func (x HostPhase) Enum() *HostPhase {
	p := new(HostPhase)
	*p = x
	return p
}

func (x HostPhase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HostPhase) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_api_proto_v1_elemental_proto_enumTypes[1].Descriptor()
}

func (HostPhase) Type() protoreflect.EnumType {
	return &file_pkg_api_proto_v1_elemental_proto_enumTypes[1]
}

func (x HostPhase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HostPhase.Descriptor instead.
func (HostPhase) EnumDescriptor() ([]byte, []int) {
	return file_pkg_api_proto_v1_elemental_proto_rawDescGZIP(), []int{1}
}

type RegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *RegistrationRequest) Reset() {
	*x = RegistrationRequest{}
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationRequest) ProtoMessage() {}

func (x *RegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationRequest.ProtoReflect.Descriptor instead.
func (*RegistrationRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_v1_elemental_proto_rawDescGZIP(), []int{0}
}

func (x *RegistrationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegistrationRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type RegistrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostAnnotations map[string]string `protobuf:"bytes,1,rep,name=hostAnnotations,proto3" json:"hostAnnotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	HostLabels      map[string]string `protobuf:"bytes,2,rep,name=hostLabels,proto3" json:"hostLabels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CloudConfig     []byte            `protobuf:"bytes,3,opt,name=cloudConfig,proto3" json:"cloudConfig,omitempty"`
	Elemental       *ElementalConfig  `protobuf:"bytes,4,opt,name=elemental,proto3" json:"elemental,omitempty"`
}

func (x *RegistrationResponse) Reset() {
	*x = RegistrationResponse{}
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationResponse) ProtoMessage() {}

func (x *RegistrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationResponse.ProtoReflect.Descriptor instead.
func (*RegistrationResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_v1_elemental_proto_rawDescGZIP(), []int{1}
}

func (x *RegistrationResponse) GetHostAnnotations() map[string]string {
	if x != nil {
		return x.HostAnnotations
	}
	return nil
}

func (x *RegistrationResponse) GetHostLabels() map[string]string {
	if x != nil {
		return x.HostLabels
	}
	return nil
}

func (x *RegistrationResponse) GetCloudConfig() []byte {
	if x != nil {
		return x.CloudConfig
	}
	return nil
}

func (x *RegistrationResponse) GetElemental() *ElementalConfig {
	if x != nil {
		return x.Elemental
	}
	return nil
}

type ElementalConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agent        *AgentConfig        `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
	Registration *RegistrationConfig `protobuf:"bytes,2,opt,name=registration,proto3" json:"registration,omitempty"`
	Install      []byte              `protobuf:"bytes,3,opt,name=install,proto3" json:"install,omitempty"`
	Reset_       []byte              `protobuf:"bytes,4,opt,name=reset,proto3" json:"reset,omitempty"`
}

func (x *ElementalConfig) Reset() {
	*x = ElementalConfig{}
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ElementalConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElementalConfig) ProtoMessage() {}

func (x *ElementalConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElementalConfig.ProtoReflect.Descriptor instead.
func (*ElementalConfig) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_v1_elemental_proto_rawDescGZIP(), []int{2}
}

func (x *ElementalConfig) GetAgent() *AgentConfig {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *ElementalConfig) GetRegistration() *RegistrationConfig {
	if x != nil {
		return x.Registration
	}
	return nil
}

func (x *ElementalConfig) GetInstall() []byte {
	if x != nil {
		return x.Install
	}
	return nil
}

func (x *ElementalConfig) GetReset_() []byte {
	if x != nil {
		return x.Reset_
	}
	return nil
}

type AgentConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Debug                 bool              `protobuf:"varint,1,opt,name=debug,proto3" json:"debug,omitempty"`
	Hostname              *HostnameConfig   `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	InsecureAllowHttp     bool              `protobuf:"varint,3,opt,name=insecureAllowHttp,proto3" json:"insecureAllowHttp,omitempty"`
	InsecureSkipTlsVerify bool              `protobuf:"varint,4,opt,name=insecureSkipTlsVerify,proto3" json:"insecureSkipTlsVerify,omitempty"`
	OsPlugin              string            `protobuf:"bytes,5,opt,name=osPlugin,proto3" json:"osPlugin,omitempty"`
	PostInstall           *PostAction       `protobuf:"bytes,6,opt,name=postInstall,proto3" json:"postInstall,omitempty"`
	PostReset             *PostAction       `protobuf:"bytes,7,opt,name=postReset,proto3" json:"postReset,omitempty"`
	Reconciliation        uint32            `protobuf:"varint,8,opt,name=reconciliation,proto3" json:"reconciliation,omitempty"`
	UseSystemCertPool     bool              `protobuf:"varint,9,opt,name=useSystemCertPool,proto3" json:"useSystemCertPool,omitempty"`
	WorkDir               string            `protobuf:"bytes,10,opt,name=workDir,proto3" json:"workDir,omitempty"`
	Grpc                  *GrpcServerConfig `protobuf:"bytes,11,opt,name=grpc,proto3" json:"grpc,omitempty"`
}

func (x *AgentConfig) Reset() {
	*x = AgentConfig{}
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentConfig) ProtoMessage() {}

func (x *AgentConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentConfig.ProtoReflect.Descriptor instead.
func (*AgentConfig) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_v1_elemental_proto_rawDescGZIP(), []int{3}
}

func (x *AgentConfig) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

func (x *AgentConfig) GetHostname() *HostnameConfig {
	if x != nil {
		return x.Hostname
	}
	return nil
}

func (x *AgentConfig) GetInsecureAllowHttp() bool {
	if x != nil {
		return x.InsecureAllowHttp
	}
	return false
}

func (x *AgentConfig) GetInsecureSkipTlsVerify() bool {
	if x != nil {
		return x.InsecureSkipTlsVerify
	}
	return false
}

func (x *AgentConfig) GetOsPlugin() string {
	if x != nil {
		return x.OsPlugin
	}
	return ""
}

func (x *AgentConfig) GetPostInstall() *PostAction {
	if x != nil {
		return x.PostInstall
	}
	return nil
}

func (x *AgentConfig) GetPostReset() *PostAction {
	if x != nil {
		return x.PostReset
	}
	return nil
}

func (x *AgentConfig) GetReconciliation() uint32 {
	if x != nil {
		return x.Reconciliation
	}
	return 0
}

func (x *AgentConfig) GetUseSystemCertPool() bool {
	if x != nil {
		return x.UseSystemCertPool
	}
	return false
}

func (x *AgentConfig) GetWorkDir() string {
	if x != nil {
		return x.WorkDir
	}
	return ""
}

func (x *AgentConfig) GetGrpc() *GrpcServerConfig {
	if x != nil {
		return x.Grpc
	}
	return nil
}

type HostnameConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix      string `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	UseExisting bool   `protobuf:"varint,2,opt,name=useExisting,proto3" json:"useExisting,omitempty"`
}

func (x *HostnameConfig) Reset() {
	*x = HostnameConfig{}
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostnameConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostnameConfig) ProtoMessage() {}

func (x *HostnameConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostnameConfig.ProtoReflect.Descriptor instead.
func (*HostnameConfig) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_v1_elemental_proto_rawDescGZIP(), []int{4}
}

func (x *HostnameConfig) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *HostnameConfig) GetUseExisting() bool {
	if x != nil {
		return x.UseExisting
	}
	return false
}

type PostAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PowerOff bool `protobuf:"varint,1,opt,name=powerOff,proto3" json:"powerOff,omitempty"`
	Reboot   bool `protobuf:"varint,2,opt,name=reboot,proto3" json:"reboot,omitempty"`
}

func (x *PostAction) Reset() {
	*x = PostAction{}
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostAction) ProtoMessage() {}

func (x *PostAction) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostAction.ProtoReflect.Descriptor instead.
func (*PostAction) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_v1_elemental_proto_rawDescGZIP(), []int{5}
}

func (x *PostAction) GetPowerOff() bool {
	if x != nil {
		return x.PowerOff
	}
	return false
}

func (x *PostAction) GetReboot() bool {
	if x != nil {
		return x.Reboot
	}
	return false
}

type RegistrationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaCert    []byte `protobuf:"bytes,1,opt,name=caCert,proto3" json:"caCert,omitempty"`
	Token     string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *RegistrationConfig) Reset() {
	*x = RegistrationConfig{}
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistrationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationConfig) ProtoMessage() {}

func (x *RegistrationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationConfig.ProtoReflect.Descriptor instead.
func (*RegistrationConfig) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_v1_elemental_proto_rawDescGZIP(), []int{6}
}

func (x *RegistrationConfig) GetCaCert() []byte {
	if x != nil {
		return x.CaCert
	}
	return nil
}

func (x *RegistrationConfig) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RegistrationConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegistrationConfig) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type GrpcServerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Port    uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *GrpcServerConfig) Reset() {
	*x = GrpcServerConfig{}
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrpcServerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcServerConfig) ProtoMessage() {}

func (x *GrpcServerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcServerConfig.ProtoReflect.Descriptor instead.
func (*GrpcServerConfig) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_v1_elemental_proto_rawDescGZIP(), []int{7}
}

func (x *GrpcServerConfig) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GrpcServerConfig) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type HostCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace   string            `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Annotations map[string]string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels      map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PubKey      string            `protobuf:"bytes,5,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
}

func (x *HostCreateRequest) Reset() {
	*x = HostCreateRequest{}
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostCreateRequest) ProtoMessage() {}

func (x *HostCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostCreateRequest.ProtoReflect.Descriptor instead.
func (*HostCreateRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_v1_elemental_proto_rawDescGZIP(), []int{8}
}

func (x *HostCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HostCreateRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *HostCreateRequest) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *HostCreateRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *HostCreateRequest) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

type HostDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *HostDeleteRequest) Reset() {
	*x = HostDeleteRequest{}
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostDeleteRequest) ProtoMessage() {}

func (x *HostDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostDeleteRequest.ProtoReflect.Descriptor instead.
func (*HostDeleteRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_v1_elemental_proto_rawDescGZIP(), []int{9}
}

func (x *HostDeleteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HostDeleteRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type HostPatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace     string            `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Annotations   map[string]string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels        map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Condition     *HostCondition    `protobuf:"bytes,5,opt,name=condition,proto3" json:"condition,omitempty"`
	InPlaceUpdate InPlaceUpdate     `protobuf:"varint,6,opt,name=inPlaceUpdate,proto3,enum=InPlaceUpdate" json:"inPlaceUpdate,omitempty"`
	Installed     bool              `protobuf:"varint,7,opt,name=installed,proto3" json:"installed,omitempty"`
	Bootstrapped  bool              `protobuf:"varint,8,opt,name=bootstrapped,proto3" json:"bootstrapped,omitempty"`
	Reset_        bool              `protobuf:"varint,9,opt,name=reset,proto3" json:"reset,omitempty"`
	Phase         HostPhase         `protobuf:"varint,10,opt,name=phase,proto3,enum=HostPhase" json:"phase,omitempty"`
}

func (x *HostPatchRequest) Reset() {
	*x = HostPatchRequest{}
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostPatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostPatchRequest) ProtoMessage() {}

func (x *HostPatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostPatchRequest.ProtoReflect.Descriptor instead.
func (*HostPatchRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_v1_elemental_proto_rawDescGZIP(), []int{10}
}

func (x *HostPatchRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HostPatchRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *HostPatchRequest) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *HostPatchRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *HostPatchRequest) GetCondition() *HostCondition {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *HostPatchRequest) GetInPlaceUpdate() InPlaceUpdate {
	if x != nil {
		return x.InPlaceUpdate
	}
	return InPlaceUpdate_IN_PLACE_UPDATE_UNSPECIFIED
}

func (x *HostPatchRequest) GetInstalled() bool {
	if x != nil {
		return x.Installed
	}
	return false
}

func (x *HostPatchRequest) GetBootstrapped() bool {
	if x != nil {
		return x.Bootstrapped
	}
	return false
}

func (x *HostPatchRequest) GetReset_() bool {
	if x != nil {
		return x.Reset_
	}
	return false
}

func (x *HostPatchRequest) GetPhase() HostPhase {
	if x != nil {
		return x.Phase
	}
	return HostPhase_HOST_PHASE_UNSPECIFIED
}

type HostCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message  string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Reason   string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Severity string `protobuf:"bytes,3,opt,name=severity,proto3" json:"severity,omitempty"`
	Type     string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Status   string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *HostCondition) Reset() {
	*x = HostCondition{}
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostCondition) ProtoMessage() {}

func (x *HostCondition) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostCondition.ProtoReflect.Descriptor instead.
func (*HostCondition) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_v1_elemental_proto_rawDescGZIP(), []int{11}
}

func (x *HostCondition) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HostCondition) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *HostCondition) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *HostCondition) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *HostCondition) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type HostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Annotations         map[string]string `protobuf:"bytes,1,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels              map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	BootstrapReady      bool              `protobuf:"varint,3,opt,name=bootstrapReady,proto3" json:"bootstrapReady,omitempty"`
	Boostrapped         bool              `protobuf:"varint,4,opt,name=boostrapped,proto3" json:"boostrapped,omitempty"`
	InPlaceUpdate       InPlaceUpdate     `protobuf:"varint,5,opt,name=inPlaceUpdate,proto3,enum=InPlaceUpdate" json:"inPlaceUpdate,omitempty"`
	Installed           bool              `protobuf:"varint,6,opt,name=installed,proto3" json:"installed,omitempty"`
	Name                string            `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	NeedsReset          bool              `protobuf:"varint,8,opt,name=needsReset,proto3" json:"needsReset,omitempty"`
	OsVersionManagement []byte            `protobuf:"bytes,9,opt,name=osVersionManagement,proto3" json:"osVersionManagement,omitempty"`
}

func (x *HostResponse) Reset() {
	*x = HostResponse{}
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostResponse) ProtoMessage() {}

func (x *HostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostResponse.ProtoReflect.Descriptor instead.
func (*HostResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_v1_elemental_proto_rawDescGZIP(), []int{12}
}

func (x *HostResponse) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *HostResponse) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *HostResponse) GetBootstrapReady() bool {
	if x != nil {
		return x.BootstrapReady
	}
	return false
}

func (x *HostResponse) GetBoostrapped() bool {
	if x != nil {
		return x.Boostrapped
	}
	return false
}

func (x *HostResponse) GetInPlaceUpdate() InPlaceUpdate {
	if x != nil {
		return x.InPlaceUpdate
	}
	return InPlaceUpdate_IN_PLACE_UPDATE_UNSPECIFIED
}

func (x *HostResponse) GetInstalled() bool {
	if x != nil {
		return x.Installed
	}
	return false
}

func (x *HostResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HostResponse) GetNeedsReset() bool {
	if x != nil {
		return x.NeedsReset
	}
	return false
}

func (x *HostResponse) GetOsVersionManagement() []byte {
	if x != nil {
		return x.OsVersionManagement
	}
	return nil
}

type HostDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostDeleteResponse) Reset() {
	*x = HostDeleteResponse{}
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostDeleteResponse) ProtoMessage() {}

func (x *HostDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostDeleteResponse.ProtoReflect.Descriptor instead.
func (*HostDeleteResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_v1_elemental_proto_rawDescGZIP(), []int{13}
}

type BootstrapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostName      string `protobuf:"bytes,1,opt,name=hostName,proto3" json:"hostName,omitempty"`
	HostNamespace string `protobuf:"bytes,2,opt,name=hostNamespace,proto3" json:"hostNamespace,omitempty"`
}

func (x *BootstrapRequest) Reset() {
	*x = BootstrapRequest{}
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootstrapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapRequest) ProtoMessage() {}

func (x *BootstrapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapRequest.ProtoReflect.Descriptor instead.
func (*BootstrapRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_v1_elemental_proto_rawDescGZIP(), []int{14}
}

func (x *BootstrapRequest) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *BootstrapRequest) GetHostNamespace() string {
	if x != nil {
		return x.HostNamespace
	}
	return ""
}

type BootstrapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Format string `protobuf:"bytes,1,opt,name=format,proto3" json:"format,omitempty"`
	Config []byte `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *BootstrapResponse) Reset() {
	*x = BootstrapResponse{}
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootstrapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapResponse) ProtoMessage() {}

func (x *BootstrapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_proto_v1_elemental_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapResponse.ProtoReflect.Descriptor instead.
func (*BootstrapResponse) Descriptor() ([]byte, []int) {
	return file_pkg_api_proto_v1_elemental_proto_rawDescGZIP(), []int{15}
}

func (x *BootstrapResponse) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *BootstrapResponse) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

var File_pkg_api_proto_v1_elemental_proto protoreflect.FileDescriptor

var file_pkg_api_proto_v1_elemental_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x76, 0x31, 0x2f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x47, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x88, 0x03, 0x0a, 0x14,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x68, 0x6f, 0x73, 0x74, 0x41, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x68, 0x6f, 0x73, 0x74, 0x41,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x68, 0x6f,
	0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x2e, 0x0a, 0x09, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x6c, 0x1a, 0x42, 0x0a, 0x14, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3d, 0x0a, 0x0f, 0x48, 0x6f, 0x73, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9e, 0x01, 0x0a, 0x0f, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x22, 0x0a, 0x05, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x37,
	0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x72, 0x65, 0x73, 0x65, 0x74, 0x22, 0xc1, 0x03, 0x0a, 0x0b, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x12, 0x2b, 0x0a,
	0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x6e,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x48, 0x74, 0x74, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x41,
	0x6c, 0x6c, 0x6f, 0x77, 0x48, 0x74, 0x74, 0x70, 0x12, 0x34, 0x0a, 0x15, 0x69, 0x6e, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x70, 0x54, 0x6c, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x65, 0x53, 0x6b, 0x69, 0x70, 0x54, 0x6c, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x73, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6f, 0x73, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x2d, 0x0a, 0x0b, 0x70, 0x6f,
	0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x6f,
	0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x29, 0x0a, 0x09, 0x70, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65,
	0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11,
	0x75, 0x73, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x6f,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x75, 0x73, 0x65, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x6f,
	0x72, 0x6b, 0x44, 0x69, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x6f, 0x72,
	0x6b, 0x44, 0x69, 0x72, 0x12, 0x25, 0x0a, 0x04, 0x67, 0x72, 0x70, 0x63, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x67, 0x72, 0x70, 0x63, 0x22, 0x4a, 0x0a, 0x0e, 0x48,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x40, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x66,
	0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x66,
	0x66, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x72, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x22, 0x74, 0x0a, 0x12, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x61, 0x43, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x63, 0x61, 0x43, 0x65, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22,
	0x40, 0x0a, 0x10, 0x47, 0x72, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x22, 0xd7, 0x02, 0x0a, 0x11, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x36, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x4b,
	0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79,
	0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x45, 0x0a, 0x11, 0x48,
	0x6f, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x22, 0x9a, 0x04, 0x0a, 0x10, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x35, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x48, 0x6f, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x0d, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x49, 0x6e,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x6f, 0x6f, 0x74,
	0x73, 0x74, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0a, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x05, 0x70,
	0x68, 0x61, 0x73, 0x65, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x89, 0x01, 0x0a, 0x0d, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x82, 0x04, 0x0a, 0x0c,
	0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31,
	0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x52, 0x65,
	0x61, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x62, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6f, 0x6f,
	0x73, 0x74, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x62, 0x6f, 0x6f, 0x73, 0x74, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x0d, 0x69,
	0x6e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x49, 0x6e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x13, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x14, 0x0a, 0x12, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x54, 0x0a, 0x10, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74,
	0x72, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68,
	0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x43, 0x0a, 0x11,
	0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2a, 0x67, 0x0a, 0x0d, 0x49, 0x6e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x49, 0x4e, 0x5f, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x5f, 0x55,
	0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x4e, 0x5f, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x5f,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x1b, 0x0a,
	0x17, 0x49, 0x4e, 0x5f, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x2a, 0x9e, 0x02, 0x0a, 0x09, 0x48,
	0x6f, 0x73, 0x74, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x48, 0x4f, 0x53, 0x54,
	0x5f, 0x50, 0x48, 0x41, 0x53, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x50, 0x48, 0x41,
	0x53, 0x45, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x01,
	0x12, 0x26, 0x0a, 0x22, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x50, 0x48, 0x41, 0x53, 0x45, 0x5f, 0x46,
	0x49, 0x4e, 0x41, 0x4c, 0x49, 0x5a, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54,
	0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x48, 0x4f, 0x53, 0x54,
	0x5f, 0x50, 0x48, 0x41, 0x53, 0x45, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x49, 0x4e,
	0x47, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x50, 0x48, 0x41, 0x53,
	0x45, 0x5f, 0x42, 0x4f, 0x4f, 0x54, 0x53, 0x54, 0x52, 0x41, 0x50, 0x50, 0x49, 0x4e, 0x47, 0x10,
	0x04, 0x12, 0x16, 0x0a, 0x12, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x50, 0x48, 0x41, 0x53, 0x45, 0x5f,
	0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x1f, 0x0a, 0x1b, 0x48, 0x4f, 0x53,
	0x54, 0x5f, 0x50, 0x48, 0x41, 0x53, 0x45, 0x5f, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x49,
	0x4e, 0x47, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x54, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x48, 0x4f,
	0x53, 0x54, 0x5f, 0x50, 0x48, 0x41, 0x53, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x54, 0x54, 0x49,
	0x4e, 0x47, 0x10, 0x07, 0x12, 0x25, 0x0a, 0x21, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x50, 0x48, 0x41,
	0x53, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x43, 0x49, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x4f,
	0x53, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x08, 0x32, 0xa1, 0x02, 0x0a, 0x09,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x12, 0x3e, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x48, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x48,
	0x6f, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x35, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61,
	0x70, 0x12, 0x11, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6f,
	0x6e, 0x63, 0x69, 0x6c, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x11, 0x2e, 0x48, 0x6f, 0x73, 0x74,
	0x50, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x48,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42,
	0x56, 0x5a, 0x54, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x65, 0x72, 0x2d, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2f, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2d, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_api_proto_v1_elemental_proto_rawDescOnce sync.Once
	file_pkg_api_proto_v1_elemental_proto_rawDescData = file_pkg_api_proto_v1_elemental_proto_rawDesc
)

func file_pkg_api_proto_v1_elemental_proto_rawDescGZIP() []byte {
	file_pkg_api_proto_v1_elemental_proto_rawDescOnce.Do(func() {
		file_pkg_api_proto_v1_elemental_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_api_proto_v1_elemental_proto_rawDescData)
	})
	return file_pkg_api_proto_v1_elemental_proto_rawDescData
}

var file_pkg_api_proto_v1_elemental_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pkg_api_proto_v1_elemental_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_pkg_api_proto_v1_elemental_proto_goTypes = []any{
	(InPlaceUpdate)(0),           // 0: InPlaceUpdate
	(HostPhase)(0),               // 1: HostPhase
	(*RegistrationRequest)(nil),  // 2: RegistrationRequest
	(*RegistrationResponse)(nil), // 3: RegistrationResponse
	(*ElementalConfig)(nil),      // 4: ElementalConfig
	(*AgentConfig)(nil),          // 5: AgentConfig
	(*HostnameConfig)(nil),       // 6: HostnameConfig
	(*PostAction)(nil),           // 7: PostAction
	(*RegistrationConfig)(nil),   // 8: RegistrationConfig
	(*GrpcServerConfig)(nil),     // 9: GrpcServerConfig
	(*HostCreateRequest)(nil),    // 10: HostCreateRequest
	(*HostDeleteRequest)(nil),    // 11: HostDeleteRequest
	(*HostPatchRequest)(nil),     // 12: HostPatchRequest
	(*HostCondition)(nil),        // 13: HostCondition
	(*HostResponse)(nil),         // 14: HostResponse
	(*HostDeleteResponse)(nil),   // 15: HostDeleteResponse
	(*BootstrapRequest)(nil),     // 16: BootstrapRequest
	(*BootstrapResponse)(nil),    // 17: BootstrapResponse
	nil,                          // 18: RegistrationResponse.HostAnnotationsEntry
	nil,                          // 19: RegistrationResponse.HostLabelsEntry
	nil,                          // 20: HostCreateRequest.AnnotationsEntry
	nil,                          // 21: HostCreateRequest.LabelsEntry
	nil,                          // 22: HostPatchRequest.AnnotationsEntry
	nil,                          // 23: HostPatchRequest.LabelsEntry
	nil,                          // 24: HostResponse.AnnotationsEntry
	nil,                          // 25: HostResponse.LabelsEntry
}
var file_pkg_api_proto_v1_elemental_proto_depIdxs = []int32{
	18, // 0: RegistrationResponse.hostAnnotations:type_name -> RegistrationResponse.HostAnnotationsEntry
	19, // 1: RegistrationResponse.hostLabels:type_name -> RegistrationResponse.HostLabelsEntry
	4,  // 2: RegistrationResponse.elemental:type_name -> ElementalConfig
	5,  // 3: ElementalConfig.agent:type_name -> AgentConfig
	8,  // 4: ElementalConfig.registration:type_name -> RegistrationConfig
	6,  // 5: AgentConfig.hostname:type_name -> HostnameConfig
	7,  // 6: AgentConfig.postInstall:type_name -> PostAction
	7,  // 7: AgentConfig.postReset:type_name -> PostAction
	9,  // 8: AgentConfig.grpc:type_name -> GrpcServerConfig
	20, // 9: HostCreateRequest.annotations:type_name -> HostCreateRequest.AnnotationsEntry
	21, // 10: HostCreateRequest.labels:type_name -> HostCreateRequest.LabelsEntry
	22, // 11: HostPatchRequest.annotations:type_name -> HostPatchRequest.AnnotationsEntry
	23, // 12: HostPatchRequest.labels:type_name -> HostPatchRequest.LabelsEntry
	13, // 13: HostPatchRequest.condition:type_name -> HostCondition
	0,  // 14: HostPatchRequest.inPlaceUpdate:type_name -> InPlaceUpdate
	1,  // 15: HostPatchRequest.phase:type_name -> HostPhase
	24, // 16: HostResponse.annotations:type_name -> HostResponse.AnnotationsEntry
	25, // 17: HostResponse.labels:type_name -> HostResponse.LabelsEntry
	0,  // 18: HostResponse.inPlaceUpdate:type_name -> InPlaceUpdate
	2,  // 19: Elemental.GetRegistration:input_type -> RegistrationRequest
	10, // 20: Elemental.CreateHost:input_type -> HostCreateRequest
	11, // 21: Elemental.DeleteHost:input_type -> HostDeleteRequest
	16, // 22: Elemental.GetBootstrap:input_type -> BootstrapRequest
	12, // 23: Elemental.ReconcileHost:input_type -> HostPatchRequest
	3,  // 24: Elemental.GetRegistration:output_type -> RegistrationResponse
	14, // 25: Elemental.CreateHost:output_type -> HostResponse
	15, // 26: Elemental.DeleteHost:output_type -> HostDeleteResponse
	17, // 27: Elemental.GetBootstrap:output_type -> BootstrapResponse
	14, // 28: Elemental.ReconcileHost:output_type -> HostResponse
	24, // [24:29] is the sub-list for method output_type
	19, // [19:24] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_pkg_api_proto_v1_elemental_proto_init() }
func file_pkg_api_proto_v1_elemental_proto_init() {
	if File_pkg_api_proto_v1_elemental_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_api_proto_v1_elemental_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_api_proto_v1_elemental_proto_goTypes,
		DependencyIndexes: file_pkg_api_proto_v1_elemental_proto_depIdxs,
		EnumInfos:         file_pkg_api_proto_v1_elemental_proto_enumTypes,
		MessageInfos:      file_pkg_api_proto_v1_elemental_proto_msgTypes,
	}.Build()
	File_pkg_api_proto_v1_elemental_proto = out.File
	file_pkg_api_proto_v1_elemental_proto_rawDesc = nil
	file_pkg_api_proto_v1_elemental_proto_goTypes = nil
	file_pkg_api_proto_v1_elemental_proto_depIdxs = nil
}
